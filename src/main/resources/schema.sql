DROP TABLE IF EXISTS FILM_GENRES;
DROP TABLE IF EXISTS FILM_LIKES;
DROP TABLE IF EXISTS REVIEW_LIKES;
DROP TABLE IF EXISTS FILM_DIRECTORS;
DROP TABLE IF EXISTS DIRECTORS;
DROP TABLE IF EXISTS REVIEWS;
DROP TABLE IF EXISTS FILMS;
DROP TABLE IF EXISTS GENRES;
DROP TABLE IF EXISTS MPA;
DROP TABLE IF EXISTS USER_FRIENDS;
DROP TABLE IF EXISTS USERS;

CREATE TABLE IF NOT EXISTS PUBLIC.MPA (
                                          MPA_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                          MPA_NAME VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS PUBLIC.FILMS (
                                            FILM_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                            NAME VARCHAR(50) NOT NULL,
                                            MPA_ID INT NOT NULL,
                                            DESCRIPTION VARCHAR(255) NOT NULL,
                                            RELEASE_DATE DATE NOT NULL,
                                            DURATION BIGINT NOT NULL,
                                            FOREIGN KEY (MPA_ID) REFERENCES PUBLIC.MPA(MPA_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.GENRES (
                                             GENRE_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                             GENRE_NAME VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS PUBLIC.FILM_GENRES (
                                                  FILM_ID INT NOT NULL,
                                                  GENRE_ID INT NOT NULL,
                                                  PRIMARY KEY (FILM_ID, GENRE_ID),
                                                  FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILMS(FILM_ID),
                                                  FOREIGN KEY (GENRE_ID) REFERENCES PUBLIC.GENRES(GENRE_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.DIRECTORS (
                                                DIRECTOR_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                                NAME VARCHAR(64) NOT NULL
);

CREATE TABLE IF NOT EXISTS PUBLIC.FILM_DIRECTORS (
                                                    FILM_ID  INT NOT NULL,
                                                    DIRECTOR_ID INT NOT NULL,
                                                    PRIMARY KEY (FILM_ID, DIRECTOR_ID),
                                                    CONSTRAINT FK_FILM
                                                    FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILMS (FILM_ID)
                                                        ON DELETE CASCADE,
                                                    CONSTRAINT FK_FILM_DIRECTORS
                                                    FOREIGN KEY (DIRECTOR_ID) REFERENCES PUBLIC.DIRECTORS (DIRECTOR_ID)
                                                        ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS PUBLIC.USERS (
                                            USER_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                            EMAIL VARCHAR(50) NOT NULL UNIQUE,
                                            LOGIN VARCHAR(50) NOT NULL UNIQUE,
                                            NAME VARCHAR(50),
                                            BIRTHDAY DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS PUBLIC.FILM_LIKES (
                                                 FILM_ID INT,
                                                 USER_ID INT,
                                                 PRIMARY KEY (FILM_ID, USER_ID),
                                                 FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILMS(FILM_ID),
                                                 FOREIGN KEY (USER_ID) REFERENCES PUBLIC.USERS(USER_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.USER_FRIENDS (
                                                   USER_ID INT NOT NULL,
                                                   FRIEND_ID INT NOT NULL,
                                                   APPLIED BOOLEAN NOT NULL,
                                                   PRIMARY KEY (USER_ID, FRIEND_ID, APPLIED),
                                                   FOREIGN KEY (USER_ID) REFERENCES PUBLIC.USERS(USER_ID),
                                                   FOREIGN KEY (FRIEND_ID) REFERENCES PUBLIC.USERS(USER_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.REVIEWS (
                                                   REVIEW_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                                   CONTENT VARCHAR(100) NOT NULL,
                                                   IS_POSITIVE BOOLEAN NOT NULL,
                                                   USER_ID INT NOT NULL,
                                                   FILM_ID INT NOT NULL,
                                                   USEFUL INT DEFAULT 0,
                                                   FOREIGN KEY (USER_ID) REFERENCES PUBLIC.USERS(USER_ID),
                                                   FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILMS(FILM_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.REVIEW_LIKES (
                                                 REVIEW_ID INT NOT NULL,
                                                 USER_ID INT NOT NULL,
                                                 IS_POSITIVE BOOLEAN NOT NULL,
                                                 PRIMARY KEY (REVIEW_ID, USER_ID),
                                                 FOREIGN KEY (REVIEW_ID) REFERENCES PUBLIC.REVIEWS(REVIEW_ID),
                                                 FOREIGN KEY (USER_ID) REFERENCES PUBLIC.USERS(USER_ID)
);